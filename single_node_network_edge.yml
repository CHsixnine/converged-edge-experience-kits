# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---
# Playbook for single node Network Edge cluster deployment



- hosts: edgenode_group
  pre_tasks:
    - name: set node name
      set_fact: node_name={{ ansible_nodename | lower }}
    - name: create helper variable
      set_fact:
        single_node_deployment: true
    - name: check deployment settings
      include_tasks: ./tasks/settings_check_ne.yml
    - name: check deployment settings for single node deployment
      include_tasks: ./tasks/settings_check_ne_single_node.yml
    - name: print deployment settings
      include_tasks: ./tasks/print_vars.yml

  roles:
    - role: offline_roles/unpack_offline_package
      when: offline_enable | default(False)
    - role: offline_roles/local_fileshare_server
      when: offline_enable | default(False)
    - role: offline_roles/trust_ssl_list
      when: offline_enable | default(False)
    - role: offline_roles/yum_repo_enable
      when: offline_enable | default(False)
    - role: infrastructure/os_setup

    - role: infrastructure/time_setup_ntp
      when: ntp_enable | default(False)

    - role: infrastructure/custom_kernel
      when: not (kernel_skip | default(False))
    - role: infrastructure/grub
    - role: infrastructure/configure_tuned
      when: not (tuned_skip | default(False))
    - role: infrastructure/conditional_reboot

    - role: infrastructure/git_repo
    - role: infrastructure/golang
    - role: infrastructure/docker
    - role: kubernetes/opae_fpga/node
      when: ne_opae_fpga_enable | default(False)
    - role: telemetry/collectd/node

- hosts: controller_group
  pre_tasks:
    - name: set node name
      set_fact: node_name={{ ansible_nodename | lower }}
    - name: create helper variable
      set_fact:
        single_node_deployment: true
    - name: update controller repo path
      set_fact:
        _git_repo_dest: "{{ openness_dir }}/edgenode/edgecontroller"

  roles:
    - role: infrastructure/os_setup
    - role: kubernetes/controlplane
    - role: kubernetes/helm
    - role: kubernetes/harbor_registry/controlplane
    - role: kubernetes/cni
    - role: kubernetes/device_plugins
      when: k8s_device_plugins_enable | default(False)
    - role: kubernetes/dashboard
      when: kubernetes_dashboard_enable | default(False)

    - role: applications/kafka
      when: eaa_enable | default(True)

    - role: applications/openness/controlplane
      when: openness_enable | default(True)

    - role: telemetry/certs
      when: >
        "telemetry_prometheus_enable | default(True) OR
        telemetry_opentelemetry_enable | default(True) OR
        telemetry_collectd_enable | default(True) OR
        telemetry_tas_enable | default(True) OR
        telemetry_cadvisor_enable | default(True) OR
        telemetry_grafana_enable | default(True) OR
        telemetry_pcm_enable | default(False)"

    - role: telemetry/prometheus
      when: "telemetry_prometheus_enable | default(True)"
    - role: telemetry/opentelemetry/controlplane
      when: "telemetry_opentelemetry_enable | default(True)"
    - role: telemetry/collectd/controlplane
      when: "telemetry_collectd_enable | default(True)"
    - role: telemetry/tas
      when: "telemetry_tas_enable | default(True)"
#   # cAdvisor might cause platform instabilities when used with single node deployment, use at your own risk
#    - role: telemetry/cadvisor/controlplane
#      when: "telemetry_cadvisor_enable | default(True)"
    - role: telemetry/grafana
      when: "telemetry_grafana_enable | default(True)"
    - role: telemetry/pcm/controlplane
      when: "telemetry_pcm_enable | default(False)"

    - role: kubernetes/bb_config
      when: fpga_sriov_userspace_enable | default(False) or acc100_sriov_userspace_enable | default(False)
    - role: kubernetes/kubevirt/controlplane
      when: kubevirt_enable | default(True)
    - role: kubernetes/opae_fpga/controlplane
      when: ne_opae_fpga_enable | default(False)
    - role: kubernetes/nfd
      when: ne_nfd_enable | default(True)
    - role: kubernetes/biosfw/controlplane
      when: ne_biosfw_enable | default(False)
    - role: kubernetes/cmk/controlplane
      when: ne_cmk_enable | default(False)
    - role: kubernetes/hddl/network_edge/controlplane
      when: ne_hddl_enable | default(False)

    - role: kubernetes/istio
      when: ne_istio_enable | default(False)

    - role: kubernetes/rmd/controlplane
      when: rmd_operator_enable | default(False)

- hosts: edgenode_group
  pre_tasks:
    - name: update edgenode repo path
      set_fact:
        _git_repo_dest: "{{ openness_dir }}/edgenode"

  roles:
    # cAdvisor might cause platform instabilities when used with single node deployment, use at your own risk
    # - role: telemetry/cadvisor/node
    - role: applications/openness/node
    - role: kubernetes/kubevirt/node
      when: kubevirt_enable | default(True)
    - role: kubernetes/biosfw/node
      when: ne_biosfw_enable | default(False)
    - role: kubernetes/cmk/node
      when: ne_cmk_enable | default(False)
    - role: kubernetes/hddl/network_edge/node
      when: ne_hddl_enable | default(False)
    - role: infrastructure/ptp/node
      when: ptp_sync_enable | default(False)
    - role: kubernetes/rmd/node
      when: rmd_operator_enable | default(False)
