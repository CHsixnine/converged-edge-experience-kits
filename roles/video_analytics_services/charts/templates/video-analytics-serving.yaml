# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: analytics-policy
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: {{ $.Values.servingPort }}
---
{{- range $platform := $.Values.platforms }}
{{- range $framework := $.Values.frameworks }}
apiVersion: v1
kind: Service
metadata:
  {{- if eq $platform "xeon" }}
  name: analytics-{{ $framework }}
  {{- else }}
  name: analytics-{{ $framework }}-{{ $platform }}
  {{- end }}
  namespace: default
  {{- if eq $.Values.multiInstances true }}
  labels:
    {{- if eq $platform "xeon" }}
    app: analytics-{{ $framework }}
    service: analytics-{{ $framework }}
    {{- else }}
    app: analytics-{{ $framework }}-{{ $platform }}
    service: analytics-{{ $framework }}-{{ $platform }}
    {{- end }}
  {{- end }}
spec:
  clusterIP: None
  selector:
    {{- if eq $platform "xeon" }}
    app: va-serving-{{ $framework }}
    {{- else }}
    app: va-serving-{{ $framework }}-{{ $platform }}
    {{- end }}
  ports:
    - protocol: TCP
      port: {{ $.Values.servingPort }}
      targetPort: {{ $.Values.servingPort }}
---
{{- range $instance := $.Values.instances }}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if eq $.Values.multiInstances true }}
  {{- if eq $platform "xeon" }}
  name: analytics-{{ $framework }}-{{ $instance.name }}
  {{- else }}
  name: analytics-{{ $framework }}-{{ $platform }}-{{ $instance.name }}
  {{- end }}
  {{- else }}
  {{- if eq $platform "xeon" }}
  name: analytics-{{ $framework }}
  {{- else }}
  name: analytics-{{ $framework }}-{{ $platform }}
  {{- end }}
  {{- end }}
  labels:
    {{- if eq $.Values.multiInstances true }}
    {{- if eq $platform "xeon" }}
    app: analytics-{{ $framework }}-{{ $instance.name }}
    {{- else }}
    app: analytics-{{ $framework }}-{{ $platform }}-{{ $instance.name }}
    {{- end }}
    version: {{ $instance.name }}
    {{- else }}
    {{- if eq $platform "xeon" }}
    app: analytics-{{ $framework }}
    {{- else }}
    app: analytics-{{ $framework }}-{{ $platform }}
    {{- end }}
    {{- end }}
  namespace: default
spec:
  replicas: {{ $.Values.replicas }}
  selector:
    matchLabels:
      {{- if eq $platform "xeon" }}
      app: va-serving-{{ $framework }}
      {{- else }}
      app: va-serving-{{ $framework }}-{{ $platform }}
      {{- end }}
      {{- if eq $.Values.multiInstances true }}
      version: {{ $instance.name }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- if eq $platform "xeon" }}
        app: va-serving-{{ $framework }}
        {{- else }}
        app: va-serving-{{ $framework }}-{{ $platform }}
        {{- end }}
        {{- if eq $.Values.multiInstances true }}
        version: {{ $instance.name }}
        {{- end }}
    spec:
      containers:
      - name: vas-gateway
        image: {{ $.Values.registry }}/{{ $.Values.servingImage }}-{{ $framework }}:{{ $.Values.servingTag }}
        imagePullPolicy: IfNotPresent
        {{- if $.Values.proxySettings.enabled }}
        env:
          - name: HTTP_PROXY
            value: {{ $.Values.proxySettings.http }}
          - name: http_proxy
            value: {{ $.Values.proxySettings.http }}
          - name: HTTPS_PROXY
            value: {{ $.Values.proxySettings.https }}
          - name: https_proxy
            value: {{ $.Values.proxySettings.https }}
          - name: FTP_PROXY
            value: {{ $.Values.proxySettings.ftp }}
          - name: ftp_proxy
            value: {{ $.Values.proxySettings.ftp }}
          - name: NO_PROXY
            value: {{ $.Values.proxySettings.noproxy }}
          - name: no_proxy
            value: {{ $.Values.proxySettings.noproxy }}
        {{- end }}
      - name: vas-sidecar
        image: {{ $.Values.registry }}/{{ $.Values.sidecarImage }}:{{ $.Values.sidecarTag }}
        imagePullPolicy: IfNotPresent
        env:
          - name: NAMESPACE
            value: default
          - name: VAS_PORT
            value: "{{ $.Values.servingPort }}"
          - name: PLATFORM
            value: {{ $platform }}
          - name: FRAMEWORK
            value: {{ $framework }}
---
{{- end }}
{{- end }}
{{- end }}