# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019 Intel Corporation

---

- name: check if packages installed in proper version
  shell: rpm -q openvswitch ovn ovn-common | grep {{ ovn_version }} | wc -l
  args:
    warn: false
  register: rpm_grep
  changed_when: false

- name: (re)install openvswitch tools if needed
  block:
  - name: remove old packages
    yum:
      name: "{{ ovn_packages_to_remove }}"
      state: absent
  - name: install OVN tools dependencies
    yum:
      name: "{{ ovn_packages_yum }}"
      state: installed
      update_cache: yes
      allow_downgrade: true
      validate_certs: no
  - name: install OVN tools
    command: "yum install -y {{ ovn_packages_urls | join(' ') }}"
    args:
      warn: false
  when: "'3' not in rpm_grep.stdout"

- name: open kube-ovn firewall rules
  ignore_errors: yes
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: yes
  with_items:
  - 6641/tcp
  - 6642/tcp
  - 6081/udp

- name: create temp dir
  tempfile:
    state: directory
    suffix: -kube-ovn
  register: tmp_dir

- name: download kube-ovn yaml files
  get_url:
    url: "{{ item }}"
    dest: "{{ tmp_dir.path }}"
  with_items: "{{ kubeovn_yamls }}"

- name: remove kube-ovn-pinger from kube-ovn.yaml
  shell: |
    # Split kube-ovn.yaml into separate resource files(one YAML document per file)
    csplit -z -f kube-ovn -b "%04d.yaml" kube-ovn.yaml '/^---$/' '{*}'
    # Remove all files that contain 'kube-ovn-pinger'(including kube-ovn.yaml)
    grep -l 'kube-ovn-pinger' kube-ovn* | xargs rm
    # Merge files
    cat kube-ovn000* > kube-ovn.yaml
  args:
    chdir: "{{ tmp_dir.path }}"
  changed_when: true

- name: apply kube-ovn
  command: "kubectl apply -f {{ item.split('/')[-1] }}"
  with_items: "{{ kubeovn_yamls }}"
  args:
    chdir: "{{ tmp_dir.path }}"
  changed_when: true

- name: remove temp directory
  file:
    path: "{{ tmp_dir.path }}"
    state: absent
  when: tmp_dir.path is defined

- name: Wait till k8s master starts
  shell: kubectl get nodes {{ ansible_hostname }} | awk '$2=="Ready"'
  register: k8s_master_init_start
  retries: 30
  delay: 10
  until: k8s_master_init_start.rc == 0
  changed_when: false
