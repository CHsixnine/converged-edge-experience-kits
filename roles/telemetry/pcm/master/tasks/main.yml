# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---

- name: include certs variables
  include_vars: ../../../certs/defaults/main.yml

- name: create telemetry namespace if needed
  block:
  - name: check if telemetry namespace exists
    command: kubectl get ns telemetry
    ignore_errors: yes
    register: get_ns_telemetry
  - name: create telemetry namespace
    command: kubectl create namespace telemetry
    when: get_ns_telemetry.rc == 1

- name: open port for pcm
  ignore_errors: yes
  firewalld:
    port: 9739/tcp
    permanent: yes
    state: enabled
    immediate: yes

- name: check if pcm already exists
  command: helm status pcm --namespace telemetry
  ignore_errors: yes
  changed_when: False
  register: get_pcm

- name: install pcm with Helm chart
  block:
  - name: copy Helm chart to the master node
    copy:
      src: "{{ role_path }}/charts/"
      dest: "{{ _pcm_chart_dir }}"
  - name: install pcm using Helm
    command: "helm install pcm --namespace telemetry {{ _pcm_chart_dir }}"
    changed_when: true
  when: get_pcm.rc != 0

- name: create pcm dashboards provisioning directory
  file:
    path: "{{ _grafana_dashboards_prov }}"
    state: directory
    mode: '0755'

- name: create pcm dashboards directory for json files
  file:
    path: "{{ _grafana_dashboards_conf }}"
    state: directory
    mode: '0755'

- name: copy pcm dashboards provisioning file
  template:
    src: "default-dashboards-providers.yml"
    dest: "{{ _grafana_dashboards_prov }}"

- name: wait for pcm pod to be ready
  command: >
    kubectl wait --field-selector=spec.nodeName={{ hostvars[item]['ansible_hostname'] }}
    --namespace=telemetry --for=condition=Ready pods --selector=app=pcm --timeout=600s
  changed_when: false
  with_inventory_hostnames:
  - controller_group

- name: get pcm dashboards from controller
  get_url:
    url: "https://{{ hostvars[item]['ansible_host'] }}:32100/dashboard/prometheus"
    dest: "{{ _grafana_dashboards_conf }}/{{ hostvars[item]['ansible_hostname'] }}.json"
    use_proxy: false
    force: yes
    client_cert: "{{ _telemetry_certs_dest }}/pcm/cert.pem"
    client_key: "{{ _telemetry_certs_dest }}/pcm/key.pem"
    validate_certs: no
  with_inventory_hostnames:
  - controller_group

# This is for ensuring, that we don't get two same titles or UIDs
- name: add prefix to title in dashboard json files
  replace:
    path: "{{ _grafana_dashboards_conf }}/{{ hostvars[item]['ansible_hostname'] }}.json"
    regexp: '  "title": "Processor Counter Monitor'
    replace: '  "title": "{{ hostvars[item]["ansible_hostname"] }} - Processor Counter Monitor'
  with_inventory_hostnames:
  - controller_group

- name: add prefix to UID in dashboard json files
  replace:
    path: "{{ _grafana_dashboards_conf }}/{{ hostvars[item]['ansible_hostname'] }}.json"
    regexp: '  "uid": "'
    replace: '  "uid": "{{ hostvars[item]["ansible_hostname"] }}-'
  with_inventory_hostnames:
  - controller_group

- name: get grafana pod name
  shell: >
    set -o pipefail && \
      kubectl get pod -l app.kubernetes.io/instance=grafana -n telemetry -o name | awk -F '/' '{print $2}'
  register: grafana_pod_name
  changed_when: False

- name: copy pcm dashboards to provisioning folder
  command: >
    kubectl cp /var/lib/grafana/dashboards/{{ hostvars[item]['ansible_hostname'] }}.json
    telemetry/{{ grafana_pod_name.stdout }}:/tmp/dashboards/{{ hostvars[item]['ansible_hostname'] }}.json
  changed_when: False
  with_inventory_hostnames:
  - controller_group
  - edgenode_group
