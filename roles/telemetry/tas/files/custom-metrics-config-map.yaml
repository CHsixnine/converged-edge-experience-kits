# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMapName }}
  namespace: {{ .Values.configMapNamespace }}
data:
  config.yaml: |
    rules:
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters: []
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_seconds_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[1m])) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_seconds_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[1m])) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^container_.*",container_name!="POD",namespace!="",pod_name!=""}'
      seriesFilters:
      - isNot: ^container_.*_total$
      resources:
        overrides:
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      name:
        matches: ^container_(.*)$
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_total$
      resources:
        template: <<.Resource>>
      name:
        matches: ""
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters:
      - isNot: .*_seconds_total
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_total$
        as: ""
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^user$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_user
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^user$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^system$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_system
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^system$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^steal$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_steal
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^steal$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^softirq$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_softirq
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^softirq$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^nice$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_nice
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^nice$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^irq$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_irq
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^irq$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^iowait$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_iowait
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^iowait$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_cpu_seconds_total$",mode=~"^idle$"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        as: cpu_seconds_total_idle
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,mode=~"^idle$"}) by (<<.GroupBy>>)
    - seriesQuery: '{__name__=~"^node_.*"}'
      seriesFilters:
        - isNot: "^node_cpu_seconds_total$"
      resources:
        overrides:
          instance:
            resource: node
      name:
        matches: ^node_(.*)
      metricsQuery: <<.Series>>
    - seriesQuery: '{__name__=~"^collectd_.*"}'
      resources:
        overrides:
          instance:
            resource: node
      name:
        matches: ^collectd_(.*)
      metricsQuery: <<.Series>>
    - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      seriesFilters: []
      resources:
        template: <<.Resource>>
      name:
        matches: ^(.*)_seconds_total$
        as: ""
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}[1m]) by (<<.GroupBy>>)
