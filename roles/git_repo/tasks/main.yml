# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019-2020 Intel Corporation

---
- name: online mode
  block:
    - debug:
        msg: "Using git token for repository checkout"
      when: git_repo_token|length > 0

    - name: set branch for controller repository
      set_fact:
        git_repo_branch: "{{ controller_repository_branch }}"
      when: "'controller_group' in group_names"

    - name: set branch for node repository
      set_fact:
        git_repo_branch: "{{ edgenode_repository_branch }}"
      when: "'edgenode_group' in group_names"

    - name: checkout clean repository
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ _git_repo_dest }}"
        version: "{{ git_repo_branch }}"
        force: yes
      when: always_clean_repository

    - name: make sure repository exists
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ _git_repo_dest }}"
        version: "{{ git_repo_branch }}"
        update: no
      when: not always_clean_repository

    - name: checkout clean x-epcforedge repository
      git:
        repo: "{{ _epcforedge_git_repo.dir }}"
        dest: "{{ _epcforedge_git_repo.download_dir }}"
        version: "{{ _epcforedge_git_repo.branch }}"
        force: yes
      register: result
      retries: "{{ number_of_retries }}"
      until: result is succeeded
      delay: "{{ retry_delay }}"
      when: "'controller_group' in group_names"
  when: not (_offline_mode | d(False))

- name: offline mode
  block:
    - name: copy repository to proper path
      copy:
        src: "{{ _offline_path }}/{{ _git_repo_dest.split('/')[-1] }}"
        dest: "/opt"
        remote_src: yes
  when: _offline_mode | d(False)
