# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019-2020 Intel Corporation

---
- name: import repository
  yum_repository:
    name: kubernetes
    description: Kubernetes repository
    baseurl: "{{ _kubernetes_repository_url }}"
    enabled: true
  become: yes
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"
  when: not offline_enable

- name: edit repository
  yum_repository:
    name: kubernetes
    description: Kubernetes repository
    baseurl: "{{ _kubernetes_repository_url }}"
    gpgkey: "{{ _kubernetes_repository_key }}"
    gpgcheck: yes
    enabled: true
  become: yes
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"
  when: not offline_enable

- name: install packages
  yum:
    name: "{{ _kubernetes_packages }}"
    state: present
    skip_broken: yes
    update_cache: yes
    allow_downgrade: true
  become: yes
  register: result
  retries: 20
  until: result is succeeded
  delay: 10
  notify:
    - enable and restart kubelet

- name: set up proxy
  include_tasks: proxy.yml
  when: proxy_enable

- name: allow bridged packets to traverse iptables rules
  block:
    - name: load br_netfiler module
      modprobe:
        name: br_netfilter
        state: present
    - name: copy net.bridge.bridge-nf-call-ip(6)tables settings
      copy:
        src: sysctl_k8s.conf
        dest: /etc/sysctl.d/sysctl_k8s.conf
    - name: get current sysctl vars
      command: grep 0 /proc/sys/net/bridge/bridge-nf-call-iptables /proc/sys/net/bridge/bridge-nf-call-ip6tables
      register: sysctl_out
      ignore_errors: yes
    - name: refresh sysctl only if desired vars are disabled
      command: sysctl --system
      when: sysctl_out.rc == 0
  become: yes

- name: open common firewall ports
  ignore_errors: yes
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: yes
  become: yes
  with_items:
    - 6443/tcp
    - 2379-2380/tcp
    - 10250-10252/tcp

- name: restart services if needed
  meta: flush_handlers

- name: setup kubectl bash completion
  shell: kubectl completion bash > /etc/bash_completion.d/kubectl
  changed_when: true
  become: yes

- name: setup kubeadm bash completion
  shell: kubeadm completion bash > /etc/bash_completion.d/kubeadm
  changed_when: true
  become: yes
