# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019 Intel Corporation

---

- name: build OVS-DPDK images
  block:
    - fail:
        msg: The ovs dpdk patches are created for version v0.10.2. Please rebase then in case of version change.
      when: kubeovn_version != "v0.10.2"

    - name: Creates kubeovn tmp directory
      file:
        path: "{{ kubeovn_destdir }}"
        state: directory

    - name: download kubeovn files
      get_url:
        url: "{{ item }}"
        dest: "{{ kubeovn_destdir }}"
      with_items: "{{ kubeovn_download_files }}"

    - name: copy Dockerfile
      copy:
        src: "{{ kubeovn_destdir }}/Dockerfile.node"
        dest: "{{ kubeovn_destdir }}/Dockerfile.dpdk"
        mode: preserve
        remote_src: yes

    - name: install patch utility
      yum:
        name: patch
        state: present

    - name: apply patch for Dockerfile.dpdk
      patch:
        src: "dockerfile_dpdk_v0.10.2.patch"
        dest: "{{ kubeovn_destdir }}/Dockerfile.dpdk"
        basedir: "{{ kubeovn_destdir }}"

    - name: copy start script
      copy:
        src: "{{ kubeovn_destdir }}/start-ovs.sh"
        dest: "{{ kubeovn_destdir }}/start-ovs-dpdk.sh"
        mode: preserve
        remote_src: yes

    - name: apply patch for start-ovs-dpdk.sh
      patch:
        src: "start_ovs_dpdk_v0.10.2.patch"
        dest: "{{ kubeovn_destdir }}/start-ovs-dpdk.sh"
        basedir: "{{ kubeovn_destdir }}"

    - name: copy files needed to build an image to dpdk folder
      copy:
        src: "{{ kubeovn_destdir }}/{{ item }}"
        dest: "{{ dpdk_install_dir }}"
        mode: preserve
        remote_src: yes
      with_items: "{{ kubeovn_dockerimage_files_to_cp }}"

    - name: build OVS-DPDK image (this may take some time...)
      docker_image:
        name: ovs-dpdk
        source: build
        build:
          path: "{{ dpdk_install_dir }}"
          dockerfile: Dockerfile.dpdk
          pull: yes
          use_config_proxy: yes

    - name: Clean ovs files
      file:
        state: absent
        path: "{{ dpdk_install_dir }}/{{ item }}"
      with_items: "{{ kubeovn_dockerimage_files_to_cp }}"
  when: ovs_dpdk
