# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2019-2020 Intel Corporation

---
- debug:
    msg: "Installing the following packages: {{ os_yum_base_packages }}"

- name: install IUS repository
  yum:
    name: https://repo.ius.io/ius-release-el7.rpm
    state: present
  become: yes
  when: not offline_enable

- name: Set empty local_pip var
  set_fact:
    local_pip: ""
  when: not offline_enable

- name: Check if offline mode
  block:
  - name: Check if offline mode
    set_fact:
      local_pip: "--no-index --find-links=https://{{ hostvars[groups['controller_group'][0]]['ansible_host'] }} \
                  --trusted-host {{ hostvars[groups['controller_group'][0]]['ansible_host'] }}"
      _openssl_url: "https://{{ hostvars[groups['controller_group'][0]]['ansible_host'] }}/{{ _openssl_package_name }}.tar.gz"

- name: install base OS rpm packages
  yum:
    name: "{{ os_yum_base_packages }}"
    state: present
    enablerepo: "{{ omit if offline_enable else 'ius-archive' }}"
    skip_broken: yes
  become: yes

- name: upgrade python2-pip version
  command: "python2 -m pip install {{ local_pip }} --upgrade pip=={{ _pip_version }}"
  changed_when: true
  become: yes

- name: install base OpenSSL from sources
  block:
    - name: OpenSSL create temp dir
      tempfile:
        state: directory
        suffix: -OpenSSL
      register: tmp_dir

    - name: OpenSSL download from {{ _openssl_url }}
      get_url:
        url: "{{ _openssl_url }}"
        dest: "{{ tmp_dir.path }}"
        checksum: "sha256:{{ _openssl_checksum_sha256 }}"
      register: result
      retries: "{{ number_of_retries  }}"
      until: result is succeeded
      delay: "{{ retry_delay }}"

    - name: OpenSSL extract
      unarchive:
        src: "{{ tmp_dir.path }}/{{ _openssl_package_name }}.tar.gz"
        dest: "{{ tmp_dir.path }}"
        remote_src: yes

    - name: OpenSSL build and install
      shell: >
        ./config &&
        make -j `nproc` > /dev/null &&
        make install > /dev/null
      become: yes
      args:
        chdir: "{{ tmp_dir.path }}/{{ _openssl_package_name }}"

    - name: OpenSSL create ld config
      copy:
        dest: "/etc/ld.so.conf.d/localuser.conf"
        content: "/usr/local/lib64"
      become: yes

    - name: OpenSSL reload ld configs
      command: "ldconfig -v"
      become: yes

    - name: OpenSSL remove temporary directory
      file:
        path: "{{ tmp_dir.path }}"
        state: absent
