# SPDX-License-Identifier: Apache-2.0
# Copyright Â© 2019-2020 Intel Corporation

---

- block:
  - name: create temporary custom .openness_gitconfig
    include_tasks: ../../../../../git_repo/tasks/gitconfig_bootstrap.yml
  - name: build AF component
    shell: source /etc/profile && make af
    args:
      chdir: "{{ _git_repo_ngc_dir }}"
  always:
    - name: remove .openness_gitconfig
      include_tasks: ../../../../../git_repo/tasks/gitconfig_remove.yml
  when: not _offline_mode

- name: copy AF binaries to build folder
  copy:
    src: "{{ _git_repo_ngc_dist_dir }}/af"
    remote_src: yes
    dest: "{{ _git_repo_ngc_build_dir }}/onprem/af"
  when: not _offline_mode

- name: copy AF configuration file
  copy:
    src: "{{ _git_repo_ngc_dir }}/configs/af.json"
    remote_src: yes
    dest: "{{ _configs_dest }}/ngc"

- name: copy oauth2 configuration file
  copy:
    src: "{{ _git_repo_ngc_dir }}/configs/oauth2.json"
    remote_src: yes
    dest: "{{ _configs_dest }}/ngc"

- name: update af config file
  shell: >
    set -o pipefail &&
    jq '.ServerConfig.Hostname="{{ _controller_name }}" | .ServerConfig.UIEndpoint="http://{{ _controller_ip }}:3020" |
    .CliConfig.NEFHostname="{{ _controller_name }}"' /etc/openness/configs/ngc/af.json |
    sponge /etc/openness/configs/ngc/af.json
  args:
  changed_when: true

- name: check Docker service
  command: systemctl status docker
  ignore_errors: true
  changed_when: false
  args:
    warn: false
  register: docker_service_status

- name: build AF docker image
  docker_image:
    name: af-image:1.0
    source: build
    build:
      path: "{{ _git_repo_ngc_build_dir }}/onprem/af"
      pull: yes
      use_config_proxy: yes
  when: docker_service_status.rc == 0 and not _offline_mode

- name: run AF container
  docker_container:
    name: af-container
    image: af-image:1.0
    state: started
    published_ports:
      - 8050:8050
      - 8051:8051
    volumes:
      - "{{ _certs_dest }}/ngc:/etc/certs:rw"
      - "{{ _configs_dest }}/ngc:/root/configs:rw"
  when: docker_service_status.rc == 0 and _ngc_test_prepare is not defined

- name: update container's /etc/hosts file
  shell: >
    set -o pipefail &&
    docker exec -t af-container  /bin/bash -c "echo {{ _controller_ip }}
    {{ _controller_name }} | tee -a /etc/hosts"
  args:
  when: _ngc_test_prepare is not defined
