# SPDX-License-Identifier: Apache-2.0
# Copyright Â© 2019-2020 Intel Corporation

---
- block:
  - name: create temporary custom .openness_gitconfig
    include_tasks: ../../../../git_repo/tasks/gitconfig_bootstrap.yml
  - name: download modules for AF component
    shell: source /etc/profile && go mod download
    args:
      chdir: "{{ _git_repo_ngc_dir }}/cmd/af"
    register: result
    retries: "{{ number_of_retries }}"
    until: result is succeeded
    delay: "{{ retry_delay }}"
  - name: build AF component
    shell: source /etc/profile && make af
    args:
      chdir: "{{ _git_repo_ngc_dir }}"
  always:
    - name: remove .openness_gitconfig
      include_tasks: ../../../../git_repo/tasks/gitconfig_remove.yml

- name: copy AF binaries to build folder
  copy:
    src: "{{ _git_repo_ngc_dist_dir }}/af"
    remote_src: yes
    dest: "{{ _git_repo_ngc_build_dir }}/networkedge/af"

- name: copy AF configuration file
  copy:
    src: "{{ _git_repo_ngc_dir }}/configs/af.json"
    remote_src: yes
    dest: "{{ _configs_dest }}/ngc"

- name: copy OAUTH2 configuration file
  copy:
    src: "{{ _git_repo_ngc_dir }}/configs/oauth2.json"
    remote_src: yes
    dest: "{{ _configs_dest }}/ngc"

- name: update af config file
  shell: >
    set -o pipefail &&
    jq '.ServerConfig.Hostname="afservice" | .ServerConfig.UIEndpoint="http://{{ _controller_ip }}:3020" |
    .CliConfig.NEFHostname="nefservice" | .CliPAConfig.Hostname="cntfservice"' /etc/openness/configs/ngc/af.json | sponge /etc/openness/configs/ngc/af.json
  args:
  changed_when: true

- name: build AF docker image
  docker_image:
    name: "{{ _image_name.af }}"
    tag: "{{ _image_tag.af }}"
    source: build
    build:
      path: "{{ _git_repo_ngc_build_dir }}/networkedge/af"
      pull: yes
      use_config_proxy: yes
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"

# Additions for Helm chart
- name: remove af release if exist
  block:
    - name: check if af release exists
      command: helm status "{{ _helm_release_name.af }}"
      ignore_errors: yes
      register: get_release_af
    - name: remove af release
      command: helm uninstall "{{ _helm_release_name.af }}"
      when: get_release_af.rc == 0
      changed_when: true

- name: tag AF docker image and push to docker registry
  docker_image:
    name: "{{ _image_name.af }}"
    repository: "{{ _registry_ip_address }}:{{ _registry_port }}/{{ _image_name.af }}"
    tag: "{{ _image_tag.oam }}"
    push: yes
    source: local

- name: remove the locally built AF docker image
  docker_image:
    state: absent
    name: "{{ _image_name.af }}"
    tag: "{{ _image_tag.af }}"

- name: Copy AF helm chart
  copy:
    src: ../charts/af
    dest: "{{ ne_helm_charts_default_dir }}"

# retry required since as part of  the previous uninstallation if the
# pods are still not completely deleted as it might take some time
- name: install the AF helm chart
  command: >
    helm install {{ _helm_release_name.af }} {{ ne_helm_charts_default_dir }}/{{ _helm_release_name.af }}
    --set image.repository={{ _registry_ip_address }}:{{ _registry_port }}/{{ _image_name.af }}
  changed_when: true
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"







