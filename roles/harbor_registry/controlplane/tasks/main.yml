# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---

- name: check if harbor release already exists
  command: helm status harbor-app -n harbor
  ignore_errors: yes
  register: get_release_harbor
  changed_when: false

- name: Set Git Repo URL
  set_fact:
    _git_repo_harbor: "{{ hostvars[groups['controller_group'][0]]['ansible_host'] }}:{{ _offline_package_path }}/github/harbor-helm/"
  when: offline_enable

- name: harbor installation
  block:
  - name: create directory for copying certificate
    file:
      path: "{{ _git_repo_dest_harbor }}"
      state: directory
      mode: '0755'
    changed_when: true

  - name: download helm-harbor repo
    git:
      repo: "{{ _git_repo_harbor }}"
      dest: "{{ _git_repo_dest_harbor }}"
      version: "{{ _version_harbor }}"
      update: no
    register: result

  - name: check hugepage size
    shell: set -o pipefail && grep Hugepagesize /proc/meminfo | awk '{print $2}'
    register: hugepage_size
    changed_when: false

  - name: check whether Hugepages is enabled
    shell: set -o pipefail && grep HugePages_Total /proc/meminfo | awk '{print $2}'
    register: hugepages_total
    changed_when: false

  - debug:
      msg:
      - "HugePages enable: {{ hugepages_total.stdout | int > 0 }}"
      - "Hugepagesize: {{ hugepage_size.stdout }}"

  - name: copy harbor helm chart values.j2 replace default values.yml
    template:
      src: values.j2
      dest:  "{{ _git_repo_dest_harbor }}/values.yaml"
      mode: '0755'

  - name: make pv disk
    file:
      path: "{{ _disk_dest_harbor }}/{{ item }}"
      state: directory
      mode: '0700'
    changed_when: true
    with_items:
      - harbor-disk1
      - harbor-disk2
      - harbor-disk3
      - harbor-disk4
      - harbor-disk5
      - harbor-disk6

  - name: copy pv disk.yaml to host
    template:
      src: templates/disks.j2
      dest:  "{{ _git_repo_dest_harbor }}/disks.yaml"
      mode: '0755'

  - name: create namespace for harbor
    command: kubectl create namespace harbor
    changed_when: true
    ignore_errors: yes

  - name: create PersistentVolume for harbor
    command: kubectl apply -f {{ _git_repo_dest_harbor }}/disks.yaml
    ignore_errors: yes
    changed_when: false

  - name: helm install
    command: helm install harbor-app -f values.yaml . -n harbor
    args:
      chdir: "{{ _git_repo_dest_harbor }}"
    ignore_errors: no
    changed_when: true
  when: get_release_harbor.rc != 0
